name: OpenDocument-Reader-Android

on: [push]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: ninja
      run: sudo apt-get install -y ninja-build
    - name: java
      uses: actions/setup-java@v2.5.0
      with:
        distribution: 'zulu'
        java-version: 11

    - name: set up python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: install python dependencies
      run: |
        python -m pip install --upgrade pip conan
    - name: conan revisions
      run: conan config set general.revisions_enabled=1
    - name: conan repo
      run: conan remote add odr https://odr.jfrog.io/artifactory/api/conan/odr-conan

    - name: build
      run: ./gradlew clean assembleDebug --scan --stacktrace

  test:
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        include:
          # Oldest version we support
          - arch: x86
            api-level: 19
          # Oldest x86_64
          - arch: x86_64
            api-level: 21
          # Newest x86
          - arch: x86
            api-level: 30
          # Newest in general
          - arch: x86_64
            api-level: 32
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: 11

    - name: brew
      run: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null 2> /dev/null
    - name: fix ninja install
      run: rm '/usr/local/bin/2to3'
    - name: ninja
      run: brew install ninja
    # https://stackoverflow.com/a/57758679/198996
    - name: bundler
      run: gem install bundler:1.17.3
    - name: fastlane
      run: bundle install

    - name: pip
      run: python3 -m ensurepip
    - name: conan
      run: pip3 install conan
    - name: conan revisions
      run: conan config set general.revisions_enabled=1
    - name: conan repo
      run: conan remote add odr https://odr.jfrog.io/artifactory/api/conan/odr-conan

    # Not necessary, project is built when being tested too
    - name: Assemble project
      run: ./gradlew assembleDebug

    - name: Android Virtual Device (AVD) cache
      uses: actions/cache@v2
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}-${{ matrix.arch }}

    - name: Create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        arch: ${{ matrix.arch }}
        target: google_apis
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    - name: Run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        arch: ${{ matrix.arch }}
        target: google_apis
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
        disable-animations: true

        script: |
          mkdir testResults
          adb logcat > testResults/logcat.txt &

          bundle exec fastlane tests || touch sorry_but_tests_are_failing

          mv app/build/reports/androidTests/connected testResults/

          adb shell screencap /data/local/tmp/screen.png
          adb pull /data/local/tmp/screen.png testResults/

          test ! -f sorry_but_tests_are_failing

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: testResults-${{ matrix.api-level }}-${{ matrix.arch }}
        path: testResults
        if-no-files-found: error
